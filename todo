#!/bin/bash

TODO_FILE="$HOME/.todo"

function todo_stamp() {
    date +"%Y-%m-%d %H:%M:%S"
}

function todo_list() {
    cat -n $TODO_FILE
}

function todo_undone() {
    sed -n "/\[ \]/p" $TODO_FILE | sort --k=1 --t=$(printf "\t")
}

function todo_done() {
    sed -n "/\[X\]/p" $TODO_FILE | sort --k=2 --t=$(printf "\t")
}

function todo_print() {
    local lines=$(sed 's/^.*\t//' <<< "$1")
    local num="$2"

    [[ -n "$num" ]] && lines=$(head -n $num <<< "$lines")
    nl <<< "$lines"
}

function todo_edit() {
    ${EDITOR:-vi} $TODO_FILE
}

function todo_write() {
    printf "$(todo_stamp)\t--\t[ ] $@\n" >> $TODO_FILE
}

function todo_main() {
    if [[ $# -eq 0 ]]; then
        todo_print "$(todo_undone)"
        exit 0
    fi

    [[ "$1" =~ ^-.[0-9]+$ ]] && local num="${1:2}"
    [[ -z "$num" ]] && num="$2" 
    [[ ! "$num" =~ ^[0-9]*$ ]] && printf "Invalid number: $num\n" && exit 1

    if [[ "$1" == "-E" || "$1" == "--edit" ]]; then
        todo_edit
    elif [[ "$1" =~ ^-[0-9]+$ ]]; then
        todo_print "$(todo_undone)" "${1:1}" | tail -n 1
    elif [[ "$1" =~ ^-U[0-9]*$ ]]; then
        todo_print "$(todo_undone)" "$num"
    else
        todo_write "$@"
    fi

    exit 0
}

todo_main "$@"
